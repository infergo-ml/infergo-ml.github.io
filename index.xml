<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Infergo — Go programs that learn</title>
    <link>http://infergo.org/</link>
    <description>Recent content in Home on Infergo — Go programs that learn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Jul 2021 18:07:04 +0300</lastBuildDate>
    <atom:link href="http://infergo.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Getting started</title>
      <link>http://infergo.org/start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://infergo.org/start/</guid>
      <description>&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;infergo&lt;/code&gt; benefits from
&lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34;&gt;modules&lt;/a&gt; introduced
in Go 1.11, and relies on
&lt;a href=&#34;https://godoc.org/golang.org/x/tools/go/packages&#34;&gt;&lt;code&gt;go/packages&lt;/code&gt;&lt;/a&gt;
to import packages in a module-aware way, but will work with
earlier versions of Go.  &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Install
Go&lt;/a&gt;. It is easier to build and
use &lt;code&gt;infergo&lt;/code&gt; with the &lt;code&gt;make&lt;/code&gt; utility.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;There are two installation options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If your Go project imports any of &lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo&#34;&gt;&lt;code&gt;infergo&lt;/code&gt;
packages&lt;/a&gt; and
uses modules, &lt;code&gt;infergo&lt;/code&gt; will be installed for you. &lt;code&gt;deriv&lt;/code&gt;
utility will be in &lt;code&gt;$GOPATH/bin&lt;/code&gt;. As a side effect of
providing examples with the main repository, the example
binaries will also be installed in &lt;code&gt;$GOPATH/bin&lt;/code&gt;. They are
not needed there, you can remove them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, you can clone the
&lt;a href=&#34;https://bitbucket.org/dtolpin/infergo&#34;&gt;repository&lt;/a&gt; and build
&lt;code&gt;infergo&lt;/code&gt; from the cloned directory:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;git clone https://bitbucket.org/dtolpin/infergo
cd infergo
make install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will install only &lt;code&gt;deriv&lt;/code&gt; but not any example binaries.
To build examples (and run each of them on the embedded
self-check dataset), run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make examples
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;hello-world&#34;&gt;Hello world&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://bitbucket.org/dtolpin/infergo/src/master/examples/hello&#34;&gt;probabilistic &amp;ldquo;Hello
world&amp;rdquo;&lt;/a&gt;
example from the &lt;code&gt;infergo&lt;/code&gt; repository shows a typical project
layout and commands to build a Go program with an &lt;code&gt;infergo&lt;/code&gt;
model. Explore the example&amp;rsquo;s source code and
&lt;a href=&#34;https://bitbucket.org/dtolpin/infergo/src/master/examples/hello/Makefile&#34;&gt;Makefile&lt;/a&gt;.
In a nutshell, one needs to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;implement the model in a separate package,&lt;/li&gt;
&lt;li&gt;differentiate the model&amp;rsquo;s package with &lt;code&gt;deriv&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;import the package with the differentiated model (ending in
&lt;code&gt;&amp;quot;ad/&amp;quot;&lt;/code&gt;) in the file where inference is performed,&lt;/li&gt;
&lt;li&gt;build the project in the normal Go way.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Peers</title>
      <link>http://infergo.org/peers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://infergo.org/peers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Guide</title>
      <link>http://infergo.org/guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://infergo.org/guide/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo&#34;&gt;&lt;img src=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo?status.svg&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;
&lt;h3 id=&#34;model&#34;&gt;Model&lt;/h3&gt;
&lt;p&gt;A model is defined in it&amp;rsquo;s own package. The model must implement
interface
&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/model#Model&#34;&gt;&lt;code&gt;model.Model&lt;/code&gt;&lt;/a&gt;,
consisting of a single method &lt;code&gt;Observe([]float64) float64&lt;/code&gt;. In
the model&amp;rsquo;s source code:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Methods on the type implementing &lt;code&gt;model.Model&lt;/code&gt; returning a
single float or nothing are differentiated.&lt;/li&gt;
&lt;li&gt;Within the methods, the following is differentiated:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;assignments to &lt;code&gt;float64&lt;/code&gt; (including parallel
assignments if all values are of type &lt;code&gt;float64&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;returns of float64;&lt;/li&gt;
&lt;li&gt;standalone calls to methods on the type implementing
model.Model (apparently called for side  effects on
the model).&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Imported package name &lt;code&gt;ad&lt;/code&gt; is reserved.&lt;/li&gt;
&lt;li&gt;Non-dummy identifiers starting with the prefix for
generated identifiers (&lt;code&gt;_&lt;/code&gt; by default) are reserved.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Derivatives do not propagate through a function that is not
an elemental or a call to a model method. If a derivative is
not registered for an elemental, calling the elemental in a
differentiated context will cause a run-time error.&lt;/p&gt;
&lt;h4 id=&#34;elemental-model&#34;&gt;Elemental model&lt;/h4&gt;
&lt;p&gt;If method &lt;code&gt;Gradient() []float64&lt;/code&gt; is provided for a model type,
the model is treated as an &amp;lsquo;elemental&amp;rsquo; model, and the gradient
returned by &lt;code&gt;Gradient()&lt;/code&gt; is used by inference algorithms. This
allows to code the gradient by hand instead of relying on
automatic differentiation.&lt;/p&gt;
&lt;h3 id=&#34;elementals&#34;&gt;Elementals&lt;/h3&gt;
&lt;p&gt;Functions are considered elementals (and must have a
registered derivative) if their signature is either of kind&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;, &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that is, one or more non-variadic &lt;code&gt;float64&lt;/code&gt; arguments and
&lt;code&gt;float64&lt;/code&gt; return value, or
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;func&lt;/span&gt; ([]&lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;) &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;For example, functions&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;foo&lt;/span&gt;(&lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;, &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;, &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;) &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;bar&lt;/span&gt;([]&lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;) &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;are considered elementals, while functions&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;fee&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;) &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;buz&lt;/span&gt;(&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;) &lt;span style=&#34;color:#902000&#34;&gt;float64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;are not. Gradients for selected functions from the &lt;code&gt;math&lt;/code&gt;
package are pre-defined (&lt;code&gt;Sqrt&lt;/code&gt;, &lt;code&gt;Exp&lt;/code&gt;, &lt;code&gt;Log&lt;/code&gt;, &lt;code&gt;Pow&lt;/code&gt;, &lt;code&gt;Sin&lt;/code&gt;,
&lt;code&gt;Cos&lt;/code&gt;, &lt;code&gt;Tan&lt;/code&gt;, &lt;code&gt;Erf&lt;/code&gt;, &lt;code&gt;Erfc&lt;/code&gt;). Auxiliary elemental functions with
pre-defined gradients are in
&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/mathx&#34;&gt;bitbucket.org/dtolpin/infergo/mathx&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;distributions&#34;&gt;Distributions&lt;/h3&gt;
&lt;p&gt;Distributions are models. Several distributions are provided in
&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/dist&#34;&gt;bitbucket.org/dtolpin/infergo/dist&lt;/a&gt;.
In addition to the &lt;code&gt;Observe&lt;/code&gt; method, distributions have &lt;code&gt;Logp&lt;/code&gt;
(single observation) and &lt;code&gt;Logps&lt;/code&gt; (multiple observations) methods
which accept distribution parameters and observations as
individual arguments rather than in a single slice.&lt;/p&gt;
&lt;h2 id=&#34;differentiation&#34;&gt;Differentiation&lt;/h2&gt;
&lt;p&gt;Command-line utility &lt;code&gt;deriv&lt;/code&gt; is used to differentiate a model.
The command-line syntax is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deriv path/to/model/package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deriv examples/hello/model
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;deriv -h&lt;/code&gt; for the full list of command-line options.  The
differentiated model is put into subpackage &amp;ldquo;ad&amp;rdquo; of the model&amp;rsquo;s
package, with the same name as the original package.&lt;/p&gt;
&lt;h2 id=&#34;inference&#34;&gt;Inference&lt;/h2&gt;
&lt;p&gt;For inference, &lt;code&gt;infergo&lt;/code&gt; offers&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;optimization via &lt;a href=&#34;https://en.wikipedia.org/wiki/Gradient_descent&#34;&gt;gradient
ascent&lt;/a&gt; methods.&lt;/li&gt;
&lt;li&gt;full posterior inference via &lt;a href=&#34;https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo&#34;&gt;Hamiltonian Monte Carlo&lt;/a&gt; variants.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;optimization&#34;&gt;Optimization&lt;/h3&gt;
&lt;p&gt;An optimizer implements interface
&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/infer#Grad&#34;&gt;&lt;code&gt;infer.Grad&lt;/code&gt;&lt;/a&gt;.
Interface implementations are &lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/infer#Momentum&#34;&gt;gradient ascent with
momentum&lt;/a&gt;
and
&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/infer#Adam&#34;&gt;Adam&lt;/a&gt;.
Both methods are capable to work with stochastic data (e.g.
streams or batches).&lt;/p&gt;
&lt;h3 id=&#34;full-posterior&#34;&gt;Full posterior&lt;/h3&gt;
&lt;p&gt;An MCMC sampler for full posterior inference implements interface
&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/infer#MCMC&#34;&gt;&lt;code&gt;infer.MCMC&lt;/code&gt;&lt;/a&gt;. Inteface implementations are &lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/infer#HMC&#34;&gt;HMC&lt;/a&gt; and &lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/infer#NUTS&#34;&gt;NUTS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://godoc.org/bitbucket.org/dtolpin/infergo/infer#DepthAdapter&#34;&gt;&lt;code&gt;DepthAdapter&lt;/code&gt;&lt;/a&gt; enables adaption of NUTS step size with respect to the average
tree depth.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Examples</title>
      <link>http://infergo.org/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://infergo.org/examples/</guid>
      <description>&lt;p&gt;&lt;code&gt;infergo&lt;/code&gt; comes bundled with &lt;a href=&#34;https://bitbucket.org/dtolpin/infergo/src/master/examples/&#34;&gt;basic
examples&lt;/a&gt;.
An example is a good starting point for a new &lt;code&gt;infergo&lt;/code&gt;
project.&lt;/p&gt;
&lt;p&gt;Advanced examples and case studies go into a separate
repository,
&lt;a href=&#34;https://bitbucket.org/dtolpin/infergo-studies&#34;&gt;https://bitbucket.org/dtolpin/infergo-studies&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>News</title>
      <link>http://infergo.org/news/</link>
      <pubDate>Sun, 11 Jul 2021 18:07:04 +0300</pubDate>
      <guid>http://infergo.org/news/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Team</title>
      <link>http://infergo.org/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://infergo.org/team/</guid>
      <description>&lt;p&gt;Contributors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://infergo.org/images/infergopher.png&#34;&gt;Gehenna Gopher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://offtopia.net/&#34;&gt;David Tolpin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
